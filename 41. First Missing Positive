Given an unsorted integer array nums, return the smallest missing positive integer.

You must implement an algorithm that runs in O(n) time and uses O(1) auxiliary space.
Example 1:

Input: nums = [1,2,0]
Output: 3
Explanation: The numbers in the range [1,2] are all in the array.
Example 2:

Input: nums = [3,4,-1,1]
Output: 2
Explanation: 1 is in the array but 2 is missing.

************************** SOLUTION CODE *********************
class Solution:
    def firstMissingPositive(self, nums: List[int]) -> int:
        end=max(nums)
        set_l=set(nums)
        if end < 0:
            return 1
        for i in range(1,end):
            if i not in set_l:
                return i
            else:
                set_l.remove(i)
        return end + 1
